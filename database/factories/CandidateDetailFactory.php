<?php

namespace Database\Factories;

use App\Models\CandidateDetail;
use App\Models\User;
use Illuminate\Database\Eloquent\Factories\Factory;
use Carbon\Carbon;

class CandidateDetailFactory extends Factory
{
    protected $model = CandidateDetail::class;

    public function definition()
    {
        // Valid province codes from ValidNIK rule
        $validProvinsiCodes = [
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            21,
            31,
            32,
            33,
            34,
            35,
            36,
            51,
            52,
            53,
            61,
            62,
            63,
            64,
            65,
            71,
            72,
            73,
            74,
            75,
            76,
            81,
            82,
            91,
            92,
            93,
            94,
            95,
            96
        ];

        $validKabupatenCodes = [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79
        ];

        $validKecamatanCodes = [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            39,
            40,
            41,
            42,
            40,
            41,
            42,
            41,
            42,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55
        ];

        // Generate birth date between 18-40 years ago
        $birthDate = Carbon::parse($this->faker->dateTimeBetween('-40 years', '-18 years'));

        // Generate NIK components
        $provinsi = $this->faker->randomElement($validProvinsiCodes);
        $kota = $this->faker->randomElement($validKabupatenCodes);
        $kecamatan = $this->faker->randomElement($validKecamatanCodes);
        $tanggal = str_pad($birthDate->day, 2, '0', STR_PAD_LEFT);
        $bulan = str_pad($birthDate->month, 2, '0', STR_PAD_LEFT);
        $tahun = substr($birthDate->year, -2);
        $urutan = str_pad($this->faker->unique()->numberBetween(1, 9999), 4, '0', STR_PAD_LEFT);

        // Combine to create valid NIK
        $nik = $provinsi . $kota . $kecamatan . $tanggal . $bulan . $tahun . $urutan;

        return [
            'user_id' => User::factory(),
            'nik' => $nik,
            'address' => $this->faker->address(),
            'birth_date' => $birthDate,
            'education_level' => $this->faker->randomElement(['SMA', 'D3', 'S1', 'S2', 'S3']),
            'major' => $this->faker->randomElement([
                'Teknik Informatika',
                'Sistem Informasi',
                'Ilmu Komputer',
                'Teknik Elektro',
                'Manajemen',
                'Akuntansi'
            ]),
            'institution' => $this->faker->randomElement([
                'Universitas Indonesia',
                'Institut Teknologi Bandung',
                'Universitas Gadjah Mada',
                'Universitas Brawijaya',
                'Universitas Airlangga'
            ]),
            'graduation_year' => $this->faker->numberBetween(2015, 2023),
        ];
    }
}
